{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/pagination.jsx","components/listGroup.jsx","components/like.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","components/moviesTable.jsx","components/movies.jsx","utils/paginate.js","App.js","reportWebVitals.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","getMovies","Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","className","map","page","onClick","ListGroup","items","onItemSelect","valueProperty","textProperty","selectedItem","item","defaultProps","Like","onLiked","movie","classes","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","key","Component","TableBody","renderCell","content","get","createKey","data","Table","MoviesTable","onLike","onDelete","Movies","renderCorrectView","noMoviesInDB","state","length","allMovies","selectedGenre","filtered","filter","pageNumber","startIndex","slice","take","value","paginate","orderBy","handleDelete","handleLike","handleSort","handleChange","id","movieInDb","find","m","splice","indexOf","deleteMovie","setState","index","handleGenreSelect","g","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5343b5.chunk.js","sourcesContent":["export const genres = [\r\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\r\n];\r\n\r\nexport function getGenres() {\r\n  return genres.filter(g => g);\r\n}\r\n","import * as genresAPI from \"./fakeGenreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\", \r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471819\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n    liked: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  }\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find(m => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find(m => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = (props) => {\r\n    const {itemsCount, pageSize, onPageChange, currentPage} = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n    // do not display the pagination if only one page.\r\n    if(pagesCount === 1) return null;\r\n\r\n    const pages = _.range(1, pagesCount + 1);\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {\r\n                    pages.map(page => \r\n                        <li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}> \r\n                            <a onClick={() => onPageChange(page)} className=\"page-link\">{page}</a>\r\n                        </li>\r\n                    )\r\n                }\r\n                \r\n            </ul> \r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n};\r\n \r\nexport default Pagination;","import React from 'react';\r\n\r\nconst ListGroup = (props) => {\r\n    \r\n    const {items, onItemSelect, valueProperty, textProperty, selectedItem} = props;\r\n\r\n    return ( \r\n        <ul className=\"list-group\">\r\n            {\r\n                items.map(item => <li \r\n                    key={item[valueProperty]}\r\n                    onClick={() => onItemSelect(item)} \r\n                    className={item === selectedItem ? \"list-group-item active clickable\" : \"list-group-item clickable\"}>\r\n                        {item[textProperty]}</li> )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty:\"name\",\r\n    valueProperty:\"_id\"\r\n};\r\n \r\nexport default ListGroup;","import React, { Component } from 'react';\r\n\r\n\r\nconst Like = ({onLiked, liked, movie}) => {\r\n\r\n    let classes = \"fa fa-heart\";\r\n    classes += liked ? \"\": \"-o\";\r\n    \r\n    return ( \r\n        <div\r\n            style={{cursor: 'pointer'}}\r\n            onClick={() => onLiked(movie)}>\r\n            <i className={classes} aria-hidden=\"true\"></i>\r\n        </div>   \r\n    );\r\n   \r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    \r\n    raiseSort = path => {\r\n\r\n        const sortColumn = {...this.props.sortColumn};\r\n\r\n        // if you click on the same column reverse the current sort order\r\n        if(sortColumn.path === path) {\r\n            sortColumn.order = sortColumn.order === 'asc' ? 'desc': 'asc';\r\n        } else {\r\n            // if it is a new column you clicked give it a default sort\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n\r\n        this.props.onSort(sortColumn);\r\n    };\r\n\r\n    renderSortIcon = column => {\r\n        const {sortColumn} = this.props;\r\n        if(column.path !== sortColumn.path) return null;\r\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"> </i>\r\n        return <i className=\"fa fa-sort-desc\"> </i>\r\n    };\r\n\r\n    render() { \r\n        return (  \r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map(column => <th\r\n                        className=\"clickable\"\r\n                        key={column.path || column.key}\r\n                        onClick={() => this.raiseSort(column.path)}>\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>)\r\n                    }\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    \r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item)\r\n        return _.get(item, column.path);\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data, columns} = this.props;\r\n\r\n        return ( \r\n            <tbody>\r\n                {\r\n                    data.map(item => <tr key={item._id}>\r\n                        {columns.map( column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n                    </tr>\r\n                    )\r\n                }\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table = (props) => {\r\n\r\n    const {columns, sortColumn, onSort, data} = props;\r\n    return (  \r\n        <table className=\"table\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n\r\n            <TableBody\r\n                data={data}\r\n                columns={columns}\r\n            />\r\n        </table>\r\n    );\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\nimport Like from './like';\r\nimport Table from './table';\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        {path: 'title', label: 'Title'},\r\n        {path: 'genre.name', label: 'Genre'},\r\n        {path: 'numberInStock', label: 'Stock'},\r\n        {path: 'dailyRentalRate', label: 'Rate'},\r\n        {key: 'like', content: movie => <Like liked={movie.liked} movie={movie} onLiked={this.props.onLike}/>},\r\n        {key:'delete', content: movie => <button className=\"btn btn-danger\" onClick={() => this.props.onDelete(movie._id)}>Delete</button>},\r\n    ];\r\n\r\n\r\n    render() { \r\n        const {movies, onSort, sortColumn} = this.props;\r\n        return ( \r\n            <Table\r\n                columns={this.columns}\r\n                data={movies}\r\n                onSort={onSort}\r\n                sortColumn={sortColumn}\r\n            />\r\n        );\r\n    }\r\n}\r\n \r\n \r\nexport default MoviesTable;","import React, { Component } from 'react';\r\nimport {getMovies, deleteMovie} from '../services/fakeMovieService';\r\nimport Pagination from './pagination';\r\nimport {paginate} from '../utils/paginate';\r\nimport ListGroup from './listGroup';\r\nimport { getGenres } from '../services/fakeGenreService';\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\n\r\nclass Movies extends Component {\r\n    // state = { \r\n    //     movies: []\r\n    // };\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = { \r\n            movies: [],\r\n            genres: [],\r\n            pageSize: 4,\r\n            currentPage: 1,\r\n            sortColumn: {path: 'title', order: 'asc'},\r\n            //selecterGenre: null,\r\n        };\r\n\r\n        // this.setState({movies: getMovies()})\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const genres = [{_id:\"\", name: 'All Genres'}, ...getGenres()];\r\n\r\n        this.setState({\r\n            genres,\r\n            movies: getMovies(),\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup\r\n                        items={this.state.genres}\r\n                        onItemSelect={this.handleGenreSelect}\r\n                        selectedItem={this.state.selectedGenre}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {this.renderCorrectView()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderCorrectView = () => {\r\n        const numberOfMoviesInDB = this.state.movies.length;\r\n        const noMoviesInDB = numberOfMoviesInDB === 0;\r\n        const allMovies = this.state.movies;\r\n        const {currentPage, pageSize, selectedGenre, sortColumn} = this.state;\r\n\r\n        if(noMoviesInDB) return <h1> There are no movies in the database</h1>;\r\n\r\n        const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(movie => movie.genre._id === selectedGenre._id):\r\n        allMovies\r\n\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n        \r\n        return (\r\n            <div>\r\n                <span>{`Showing ${filtered.length} in the database`}</span>\r\n                \r\n                <MoviesTable \r\n                    movies={movies}\r\n                    onDelete={this.handleDelete}\r\n                    sortColumn={sortColumn}\r\n                    onLike={this.handleLike}\r\n                    onSort={this.handleSort}\r\n                />\r\n                <Pagination \r\n                    itemsCount={filtered.length}\r\n                    pageSize={pageSize}\r\n                    onSort={this.handleSort}\r\n                    sortColumn={this.state.sortColumn}\r\n                    onPageChange={this.handleChange}\r\n                    currentPage={currentPage}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        deleteMovie(id);\r\n        this.setState({movies: getMovies()})\r\n    }\r\n\r\n    handleLike = (movie) => {\r\n        \r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movie};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({movies});\r\n\r\n    }\r\n\r\n    handleChange = (page) => {\r\n        this.setState({currentPage: page});\r\n    }\r\n\r\n    handleGenreSelect = (genre) => {\r\n        this.setState({selectedGenre: genre, currentPage: 1});\r\n    }\r\n\r\n    handleSort = (sortColumn) => {\r\n        this.setState({ sortColumn })\r\n    }\r\n}\r\n \r\nexport default Movies;","import _ from 'lodash';\r\n\r\nexport function paginate (items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Movies from './components/movies';\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"container\">\r\n      <Movies />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}